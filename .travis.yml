language: python

sudo: required

services:
  - docker

env:
  - IMAGE_BUILD_PLATFORM=stable-centos7
  - IMAGE_BUILD_PLATFORM=devel-centos7

install:
  - npm install -g validate-dockerfile

script:
  - docklint ${IMAGE_BUILD_PLATFORM}/Dockerfile
  - docker build -t trinitronx/ansible-base:${IMAGE_BUILD_PLATFORM} ${IMAGE_BUILD_PLATFORM}/
  - docker run --privileged -d -ti -e "container=docker"  -v /sys/fs/cgroup:/sys/fs/cgroup  trinitronx/ansible-base:${IMAGE_BUILD_PLATFORM}  /usr/sbin/init
  - DOCKER_CONTAINER_ID=$(docker ps | grep ${IMAGE_BUILD_PLATFORM} | awk '{print $1}')
  - docker logs $DOCKER_CONTAINER_ID
# Prepare test environment
  - docker exec -ti $DOCKER_CONTAINER_ID /bin/sh -c 'sudo yum -y install make && mkdir -p /opt/ansible/'
  - docker exec -ti $DOCKER_CONTAINER_ID /bin/sh -c 'if ! [ -d /opt/ansible/ansible ] || ! bash -c "cd /opt/ansible/ansible && git branch"; then git clone http://github.com/ansible/ansible.git /opt/ansible/ansible ; fi'
  - >
    docker exec -ti $DOCKER_CONTAINER_ID /bin/sh -c 'cd /opt/ansible/ansible &&
       export ANSIBLE_VERSION=$(ansible-playbook --version | sed "s/[^0-9.]*\([0-9.]*\).*/\1/") &&
       export GIT_TAG=$(git tag | grep $ANSIBLE_VERSION | grep -v rc) &&
       echo $ANSIBLE_VERSION && echo $GIT_TAG &&
       git checkout $GIT_TAG &&  git submodule update --init &&
       sudo pip install tox sphinx &&
       sudo pip install paramiko PyYAML jinja2 httplib2 passlib nose mock '
  - docker exec -ti $DOCKER_CONTAINER_ID /bin/sh -c 'cd /opt/ansible/ansible && make tests '
  - >
    docker exec -ti $DOCKER_CONTAINER_ID /bin/sh -c 'cd /opt/ansible/ansible/test/integration/ &&
       make -j 1 parsing test_var_precedence test_templating_settings non_destructive includes check_mode test_hash test_handlers test_group_by test_vault test_tags '
  - >
    docker exec -ti $DOCKER_CONTAINER_ID /bin/sh -c 'echo -ne "------\nEND ANSIBLE TESTS\n------\nSystemD Units:\n------\n";
       systemctl --no-pager --all --full status ;
       echo -ne "------\nJournalD Logs:\n------\n" ;
       sudo journalctl --catalog --all --full --no-pager'
  - docker ps -a
  - docker stop $DOCKER_CONTAINER_ID
  - docker rm -v $DOCKER_CONTAINER_ID
